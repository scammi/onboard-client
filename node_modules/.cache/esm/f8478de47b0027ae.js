let App,apiKey;_7b0‍.x([["Onboard",()=>Onboard]]);_7b0‍.w("@onboardmoney/sdk",[["App",["App"],function(v){App=v}]]);_7b0‍.w("./pk.js",[["apiKey",["apiKey"],function(v){apiKey=v}]]);



       class Onboard {

  constructor() {
    const network = 'goerli';
    this.apikey = apiKey;
    this.address = '0x711D96a560f72A048bDc64D87526249a82aB5D02';
    this.onboardmoney = new App(apikey, `https://${network}.onboard.money`);
  }

  async get_balance() {
    // Fetch application ETH balance and address for gas payments
    const { balance, relayAddress } = await onboardmoney.balance();
    _7b0‍.g.console.log(balance);
    return balance;
  }

  async createUser() {
    const { userAddress } = await onboardmoney.createUser();
    _7b0‍.g.console.log(userAddress);
  }

  async get_policy() {
    const { policy } = await onboardmoney.getPolicy();
    _7b0‍.g.console.log(policy);
  }

  async createTrx() {
    const userAddress = '0xdCD3a7aEf5994b731Cc90395894fD4475dD6AdFd'
    const batch = {
      txs: [
        {
          from: userAddress,
          to: '0x5b2554112Ce698B023CC7fF4EB27eAd0e3fad019',
          value: 5000000000000000,
          gasLimit: '100000',
        },
      ],
    }
    const txReceipt = await onboardmoney.sendBatch(batch);
    _7b0‍.g.console.log(userAddress);
  }
  async evaluateBatch() {
    const userAddress = '0xdCD3a7aEf5994b731Cc90395894fD4475dD6AdFd'
    const batch = {
      txs: [
        {
          from: userAddress,
          to: '0x5b2554112Ce698B023CC7fF4EB27eAd0e3fad019',
          value: 5000000000000000,
          gasLimit: '100000',
        },
      ],
    }
    const { success } = await onboardmoney.evaluateBatch(batch)
  }
}


// balance().catch((error) => {
//   console.log(error);
// });

// createUser().catch((error) => {
//   console.log(error);
// });

// get_policy().catch((error) => {
//   console.log(error);
// })

// createTrx().catch((error) => {
//   console.log(error);
// })

// evaluateBatch().catch((error) => {
//   console.log(error);
// })